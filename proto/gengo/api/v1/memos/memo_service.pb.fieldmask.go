//Code generated by protoc-gen-go-fieldmask. DO NOT EDIT.
//versions:
//- protoc-gen-go-fieldmask v1.0.9
//- protoc (unknown)
//source: api/v1/memos/memo_service.proto

package memos

import (
	fieldmask "github.com/RyoJerryYu/protoc-gen-plugins/pkg/fieldmask"
)

// IMemoFieldPath is the interface for the field path of Memo
type IMemoFieldPath interface {
	String() string
	Name() string
	Uid() string
	RowStatus() string
	Creator() string
	CreateTime() fieldmask.ITimestampFieldPath
	UpdateTime() fieldmask.ITimestampFieldPath
	DisplayTime() fieldmask.ITimestampFieldPath
	Content() string
	Nodes() string
	Visibility() string
	Tags() string
	Pinned() string
	Resources() string
	Relations() string
	Reactions() string
	OtherReaction() IReactionFieldPath
	Property() IMemoPropertyFieldPath
	Snippet() string
}

// memoFieldPath is the implementation for the field path of Memo
type memoFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewMemoFieldPath creates a new memoFieldPath
func NewMemoFieldPath(fieldPath string) IMemoFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return memoFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x memoFieldPath) String() string { return x.fieldPath }

func (x memoFieldPath) Name() string      { return x.prefix + "name" }
func (x memoFieldPath) Uid() string       { return x.prefix + "uid" }
func (x memoFieldPath) RowStatus() string { return x.prefix + "row_status" }
func (x memoFieldPath) Creator() string   { return x.prefix + "creator" }
func (x memoFieldPath) CreateTime() fieldmask.ITimestampFieldPath {
	return fieldmask.NewTimestampFieldPath(x.prefix + "create_time")
}
func (x memoFieldPath) UpdateTime() fieldmask.ITimestampFieldPath {
	return fieldmask.NewTimestampFieldPath(x.prefix + "update_time")
}
func (x memoFieldPath) DisplayTime() fieldmask.ITimestampFieldPath {
	return fieldmask.NewTimestampFieldPath(x.prefix + "display_time")
}
func (x memoFieldPath) Content() string    { return x.prefix + "content" }
func (x memoFieldPath) Nodes() string      { return x.prefix + "nodes" }
func (x memoFieldPath) Visibility() string { return x.prefix + "visibility" }
func (x memoFieldPath) Tags() string       { return x.prefix + "tags" }
func (x memoFieldPath) Pinned() string     { return x.prefix + "pinned" }
func (x memoFieldPath) Resources() string  { return x.prefix + "resources" }
func (x memoFieldPath) Relations() string  { return x.prefix + "relations" }
func (x memoFieldPath) Reactions() string  { return x.prefix + "reactions" }
func (x memoFieldPath) OtherReaction() IReactionFieldPath {
	return NewReactionFieldPath(x.prefix + "other_reaction")
}
func (x memoFieldPath) Property() IMemoPropertyFieldPath {
	return NewMemoPropertyFieldPath(x.prefix + "property")
}
func (x memoFieldPath) Snippet() string { return x.prefix + "snippet" }

// FieldPath returns the field path for Memo
func (x *Memo) FieldPath() IMemoFieldPath {
	return NewMemoFieldPath("")
}

// IMemoPropertyFieldPath is the interface for the field path of MemoProperty
type IMemoPropertyFieldPath interface {
	String() string
	Tags() string
	HasLink() string
	HasTaskList() string
	HasCode() string
	HasIncompleteTasks() string
}

// memoPropertyFieldPath is the implementation for the field path of MemoProperty
type memoPropertyFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewMemoPropertyFieldPath creates a new memoPropertyFieldPath
func NewMemoPropertyFieldPath(fieldPath string) IMemoPropertyFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return memoPropertyFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x memoPropertyFieldPath) String() string { return x.fieldPath }

func (x memoPropertyFieldPath) Tags() string               { return x.prefix + "tags" }
func (x memoPropertyFieldPath) HasLink() string            { return x.prefix + "has_link" }
func (x memoPropertyFieldPath) HasTaskList() string        { return x.prefix + "has_task_list" }
func (x memoPropertyFieldPath) HasCode() string            { return x.prefix + "has_code" }
func (x memoPropertyFieldPath) HasIncompleteTasks() string { return x.prefix + "has_incomplete_tasks" }

// FieldPath returns the field path for MemoProperty
func (x *MemoProperty) FieldPath() IMemoPropertyFieldPath {
	return NewMemoPropertyFieldPath("")
}

// ILocationFieldPath is the interface for the field path of Location
type ILocationFieldPath interface {
	String() string
	Placeholder() string
	Latitude() string
	Longitude() string
}

// locationFieldPath is the implementation for the field path of Location
type locationFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewLocationFieldPath creates a new locationFieldPath
func NewLocationFieldPath(fieldPath string) ILocationFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return locationFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x locationFieldPath) String() string { return x.fieldPath }

func (x locationFieldPath) Placeholder() string { return x.prefix + "placeholder" }
func (x locationFieldPath) Latitude() string    { return x.prefix + "latitude" }
func (x locationFieldPath) Longitude() string   { return x.prefix + "longitude" }

// FieldPath returns the field path for Location
func (x *Location) FieldPath() ILocationFieldPath {
	return NewLocationFieldPath("")
}

// ICreateMemoRequestFieldPath is the interface for the field path of CreateMemoRequest
type ICreateMemoRequestFieldPath interface {
	String() string
	Content() string
	Visibility() string
	Resources() string
	Relations() string
}

// createMemoRequestFieldPath is the implementation for the field path of CreateMemoRequest
type createMemoRequestFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewCreateMemoRequestFieldPath creates a new createMemoRequestFieldPath
func NewCreateMemoRequestFieldPath(fieldPath string) ICreateMemoRequestFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return createMemoRequestFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x createMemoRequestFieldPath) String() string { return x.fieldPath }

func (x createMemoRequestFieldPath) Content() string    { return x.prefix + "content" }
func (x createMemoRequestFieldPath) Visibility() string { return x.prefix + "visibility" }
func (x createMemoRequestFieldPath) Resources() string  { return x.prefix + "resources" }
func (x createMemoRequestFieldPath) Relations() string  { return x.prefix + "relations" }

// FieldPath returns the field path for CreateMemoRequest
func (x *CreateMemoRequest) FieldPath() ICreateMemoRequestFieldPath {
	return NewCreateMemoRequestFieldPath("")
}

// IListMemosRequestFieldPath is the interface for the field path of ListMemosRequest
type IListMemosRequestFieldPath interface {
	String() string
	PageSize() string
	PageToken() string
	Filter() string
	View() string
}

// listMemosRequestFieldPath is the implementation for the field path of ListMemosRequest
type listMemosRequestFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewListMemosRequestFieldPath creates a new listMemosRequestFieldPath
func NewListMemosRequestFieldPath(fieldPath string) IListMemosRequestFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return listMemosRequestFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x listMemosRequestFieldPath) String() string { return x.fieldPath }

func (x listMemosRequestFieldPath) PageSize() string  { return x.prefix + "page_size" }
func (x listMemosRequestFieldPath) PageToken() string { return x.prefix + "page_token" }
func (x listMemosRequestFieldPath) Filter() string    { return x.prefix + "filter" }
func (x listMemosRequestFieldPath) View() string      { return x.prefix + "view" }

// FieldPath returns the field path for ListMemosRequest
func (x *ListMemosRequest) FieldPath() IListMemosRequestFieldPath {
	return NewListMemosRequestFieldPath("")
}

// IListMemosResponseFieldPath is the interface for the field path of ListMemosResponse
type IListMemosResponseFieldPath interface {
	String() string
	Memos() string
	NextPageToken() string
}

// listMemosResponseFieldPath is the implementation for the field path of ListMemosResponse
type listMemosResponseFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewListMemosResponseFieldPath creates a new listMemosResponseFieldPath
func NewListMemosResponseFieldPath(fieldPath string) IListMemosResponseFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return listMemosResponseFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x listMemosResponseFieldPath) String() string { return x.fieldPath }

func (x listMemosResponseFieldPath) Memos() string         { return x.prefix + "memos" }
func (x listMemosResponseFieldPath) NextPageToken() string { return x.prefix + "next_page_token" }

// FieldPath returns the field path for ListMemosResponse
func (x *ListMemosResponse) FieldPath() IListMemosResponseFieldPath {
	return NewListMemosResponseFieldPath("")
}

// IGetMemoRequestFieldPath is the interface for the field path of GetMemoRequest
type IGetMemoRequestFieldPath interface {
	String() string
	Name() string
}

// getMemoRequestFieldPath is the implementation for the field path of GetMemoRequest
type getMemoRequestFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewGetMemoRequestFieldPath creates a new getMemoRequestFieldPath
func NewGetMemoRequestFieldPath(fieldPath string) IGetMemoRequestFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return getMemoRequestFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x getMemoRequestFieldPath) String() string { return x.fieldPath }

func (x getMemoRequestFieldPath) Name() string { return x.prefix + "name" }

// FieldPath returns the field path for GetMemoRequest
func (x *GetMemoRequest) FieldPath() IGetMemoRequestFieldPath {
	return NewGetMemoRequestFieldPath("")
}

// IGetMemoByUidRequestFieldPath is the interface for the field path of GetMemoByUidRequest
type IGetMemoByUidRequestFieldPath interface {
	String() string
	Uid() string
}

// getMemoByUidRequestFieldPath is the implementation for the field path of GetMemoByUidRequest
type getMemoByUidRequestFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewGetMemoByUidRequestFieldPath creates a new getMemoByUidRequestFieldPath
func NewGetMemoByUidRequestFieldPath(fieldPath string) IGetMemoByUidRequestFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return getMemoByUidRequestFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x getMemoByUidRequestFieldPath) String() string { return x.fieldPath }

func (x getMemoByUidRequestFieldPath) Uid() string { return x.prefix + "uid" }

// FieldPath returns the field path for GetMemoByUidRequest
func (x *GetMemoByUidRequest) FieldPath() IGetMemoByUidRequestFieldPath {
	return NewGetMemoByUidRequestFieldPath("")
}

// IUpdateMemoRequestFieldPath is the interface for the field path of UpdateMemoRequest
type IUpdateMemoRequestFieldPath interface {
	String() string
	Memo() IMemoFieldPath
	UpdateMask() fieldmask.IFieldMaskFieldPath
}

// updateMemoRequestFieldPath is the implementation for the field path of UpdateMemoRequest
type updateMemoRequestFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewUpdateMemoRequestFieldPath creates a new updateMemoRequestFieldPath
func NewUpdateMemoRequestFieldPath(fieldPath string) IUpdateMemoRequestFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return updateMemoRequestFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x updateMemoRequestFieldPath) String() string { return x.fieldPath }

func (x updateMemoRequestFieldPath) Memo() IMemoFieldPath { return NewMemoFieldPath(x.prefix + "memo") }
func (x updateMemoRequestFieldPath) UpdateMask() fieldmask.IFieldMaskFieldPath {
	return fieldmask.NewFieldMaskFieldPath(x.prefix + "update_mask")
}

// FieldPath returns the field path for UpdateMemoRequest
func (x *UpdateMemoRequest) FieldPath() IUpdateMemoRequestFieldPath {
	return NewUpdateMemoRequestFieldPath("")
}

// IDeleteMemoRequestFieldPath is the interface for the field path of DeleteMemoRequest
type IDeleteMemoRequestFieldPath interface {
	String() string
	Name() string
}

// deleteMemoRequestFieldPath is the implementation for the field path of DeleteMemoRequest
type deleteMemoRequestFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewDeleteMemoRequestFieldPath creates a new deleteMemoRequestFieldPath
func NewDeleteMemoRequestFieldPath(fieldPath string) IDeleteMemoRequestFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return deleteMemoRequestFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x deleteMemoRequestFieldPath) String() string { return x.fieldPath }

func (x deleteMemoRequestFieldPath) Name() string { return x.prefix + "name" }

// FieldPath returns the field path for DeleteMemoRequest
func (x *DeleteMemoRequest) FieldPath() IDeleteMemoRequestFieldPath {
	return NewDeleteMemoRequestFieldPath("")
}

// IRenameMemoTagRequestFieldPath is the interface for the field path of RenameMemoTagRequest
type IRenameMemoTagRequestFieldPath interface {
	String() string
	Parent() string
	OldTag() string
	NewTag() string
}

// renameMemoTagRequestFieldPath is the implementation for the field path of RenameMemoTagRequest
type renameMemoTagRequestFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewRenameMemoTagRequestFieldPath creates a new renameMemoTagRequestFieldPath
func NewRenameMemoTagRequestFieldPath(fieldPath string) IRenameMemoTagRequestFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return renameMemoTagRequestFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x renameMemoTagRequestFieldPath) String() string { return x.fieldPath }

func (x renameMemoTagRequestFieldPath) Parent() string { return x.prefix + "parent" }
func (x renameMemoTagRequestFieldPath) OldTag() string { return x.prefix + "old_tag" }
func (x renameMemoTagRequestFieldPath) NewTag() string { return x.prefix + "new_tag" }

// FieldPath returns the field path for RenameMemoTagRequest
func (x *RenameMemoTagRequest) FieldPath() IRenameMemoTagRequestFieldPath {
	return NewRenameMemoTagRequestFieldPath("")
}

// IDeleteMemoTagRequestFieldPath is the interface for the field path of DeleteMemoTagRequest
type IDeleteMemoTagRequestFieldPath interface {
	String() string
	Parent() string
	Tag() string
	DeleteRelatedMemos() string
}

// deleteMemoTagRequestFieldPath is the implementation for the field path of DeleteMemoTagRequest
type deleteMemoTagRequestFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewDeleteMemoTagRequestFieldPath creates a new deleteMemoTagRequestFieldPath
func NewDeleteMemoTagRequestFieldPath(fieldPath string) IDeleteMemoTagRequestFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return deleteMemoTagRequestFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x deleteMemoTagRequestFieldPath) String() string { return x.fieldPath }

func (x deleteMemoTagRequestFieldPath) Parent() string { return x.prefix + "parent" }
func (x deleteMemoTagRequestFieldPath) Tag() string    { return x.prefix + "tag" }
func (x deleteMemoTagRequestFieldPath) DeleteRelatedMemos() string {
	return x.prefix + "delete_related_memos"
}

// FieldPath returns the field path for DeleteMemoTagRequest
func (x *DeleteMemoTagRequest) FieldPath() IDeleteMemoTagRequestFieldPath {
	return NewDeleteMemoTagRequestFieldPath("")
}

// ISetMemoResourcesRequestFieldPath is the interface for the field path of SetMemoResourcesRequest
type ISetMemoResourcesRequestFieldPath interface {
	String() string
	Name() string
	Resources() string
}

// setMemoResourcesRequestFieldPath is the implementation for the field path of SetMemoResourcesRequest
type setMemoResourcesRequestFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewSetMemoResourcesRequestFieldPath creates a new setMemoResourcesRequestFieldPath
func NewSetMemoResourcesRequestFieldPath(fieldPath string) ISetMemoResourcesRequestFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return setMemoResourcesRequestFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x setMemoResourcesRequestFieldPath) String() string { return x.fieldPath }

func (x setMemoResourcesRequestFieldPath) Name() string      { return x.prefix + "name" }
func (x setMemoResourcesRequestFieldPath) Resources() string { return x.prefix + "resources" }

// FieldPath returns the field path for SetMemoResourcesRequest
func (x *SetMemoResourcesRequest) FieldPath() ISetMemoResourcesRequestFieldPath {
	return NewSetMemoResourcesRequestFieldPath("")
}

// IListMemoResourcesRequestFieldPath is the interface for the field path of ListMemoResourcesRequest
type IListMemoResourcesRequestFieldPath interface {
	String() string
	Name() string
}

// listMemoResourcesRequestFieldPath is the implementation for the field path of ListMemoResourcesRequest
type listMemoResourcesRequestFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewListMemoResourcesRequestFieldPath creates a new listMemoResourcesRequestFieldPath
func NewListMemoResourcesRequestFieldPath(fieldPath string) IListMemoResourcesRequestFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return listMemoResourcesRequestFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x listMemoResourcesRequestFieldPath) String() string { return x.fieldPath }

func (x listMemoResourcesRequestFieldPath) Name() string { return x.prefix + "name" }

// FieldPath returns the field path for ListMemoResourcesRequest
func (x *ListMemoResourcesRequest) FieldPath() IListMemoResourcesRequestFieldPath {
	return NewListMemoResourcesRequestFieldPath("")
}

// IListMemoResourcesResponseFieldPath is the interface for the field path of ListMemoResourcesResponse
type IListMemoResourcesResponseFieldPath interface {
	String() string
	Resources() string
}

// listMemoResourcesResponseFieldPath is the implementation for the field path of ListMemoResourcesResponse
type listMemoResourcesResponseFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewListMemoResourcesResponseFieldPath creates a new listMemoResourcesResponseFieldPath
func NewListMemoResourcesResponseFieldPath(fieldPath string) IListMemoResourcesResponseFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return listMemoResourcesResponseFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x listMemoResourcesResponseFieldPath) String() string { return x.fieldPath }

func (x listMemoResourcesResponseFieldPath) Resources() string { return x.prefix + "resources" }

// FieldPath returns the field path for ListMemoResourcesResponse
func (x *ListMemoResourcesResponse) FieldPath() IListMemoResourcesResponseFieldPath {
	return NewListMemoResourcesResponseFieldPath("")
}

// ISetMemoRelationsRequestFieldPath is the interface for the field path of SetMemoRelationsRequest
type ISetMemoRelationsRequestFieldPath interface {
	String() string
	Name() string
	Relations() string
}

// setMemoRelationsRequestFieldPath is the implementation for the field path of SetMemoRelationsRequest
type setMemoRelationsRequestFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewSetMemoRelationsRequestFieldPath creates a new setMemoRelationsRequestFieldPath
func NewSetMemoRelationsRequestFieldPath(fieldPath string) ISetMemoRelationsRequestFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return setMemoRelationsRequestFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x setMemoRelationsRequestFieldPath) String() string { return x.fieldPath }

func (x setMemoRelationsRequestFieldPath) Name() string      { return x.prefix + "name" }
func (x setMemoRelationsRequestFieldPath) Relations() string { return x.prefix + "relations" }

// FieldPath returns the field path for SetMemoRelationsRequest
func (x *SetMemoRelationsRequest) FieldPath() ISetMemoRelationsRequestFieldPath {
	return NewSetMemoRelationsRequestFieldPath("")
}

// IListMemoRelationsRequestFieldPath is the interface for the field path of ListMemoRelationsRequest
type IListMemoRelationsRequestFieldPath interface {
	String() string
	Name() string
}

// listMemoRelationsRequestFieldPath is the implementation for the field path of ListMemoRelationsRequest
type listMemoRelationsRequestFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewListMemoRelationsRequestFieldPath creates a new listMemoRelationsRequestFieldPath
func NewListMemoRelationsRequestFieldPath(fieldPath string) IListMemoRelationsRequestFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return listMemoRelationsRequestFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x listMemoRelationsRequestFieldPath) String() string { return x.fieldPath }

func (x listMemoRelationsRequestFieldPath) Name() string { return x.prefix + "name" }

// FieldPath returns the field path for ListMemoRelationsRequest
func (x *ListMemoRelationsRequest) FieldPath() IListMemoRelationsRequestFieldPath {
	return NewListMemoRelationsRequestFieldPath("")
}

// IListMemoRelationsResponseFieldPath is the interface for the field path of ListMemoRelationsResponse
type IListMemoRelationsResponseFieldPath interface {
	String() string
	Relations() string
}

// listMemoRelationsResponseFieldPath is the implementation for the field path of ListMemoRelationsResponse
type listMemoRelationsResponseFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewListMemoRelationsResponseFieldPath creates a new listMemoRelationsResponseFieldPath
func NewListMemoRelationsResponseFieldPath(fieldPath string) IListMemoRelationsResponseFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return listMemoRelationsResponseFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x listMemoRelationsResponseFieldPath) String() string { return x.fieldPath }

func (x listMemoRelationsResponseFieldPath) Relations() string { return x.prefix + "relations" }

// FieldPath returns the field path for ListMemoRelationsResponse
func (x *ListMemoRelationsResponse) FieldPath() IListMemoRelationsResponseFieldPath {
	return NewListMemoRelationsResponseFieldPath("")
}

// ICreateMemoCommentRequestFieldPath is the interface for the field path of CreateMemoCommentRequest
type ICreateMemoCommentRequestFieldPath interface {
	String() string
	Name() string
	Comment() ICreateMemoRequestFieldPath
}

// createMemoCommentRequestFieldPath is the implementation for the field path of CreateMemoCommentRequest
type createMemoCommentRequestFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewCreateMemoCommentRequestFieldPath creates a new createMemoCommentRequestFieldPath
func NewCreateMemoCommentRequestFieldPath(fieldPath string) ICreateMemoCommentRequestFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return createMemoCommentRequestFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x createMemoCommentRequestFieldPath) String() string { return x.fieldPath }

func (x createMemoCommentRequestFieldPath) Name() string { return x.prefix + "name" }
func (x createMemoCommentRequestFieldPath) Comment() ICreateMemoRequestFieldPath {
	return NewCreateMemoRequestFieldPath(x.prefix + "comment")
}

// FieldPath returns the field path for CreateMemoCommentRequest
func (x *CreateMemoCommentRequest) FieldPath() ICreateMemoCommentRequestFieldPath {
	return NewCreateMemoCommentRequestFieldPath("")
}

// IListMemoCommentsRequestFieldPath is the interface for the field path of ListMemoCommentsRequest
type IListMemoCommentsRequestFieldPath interface {
	String() string
	Name() string
}

// listMemoCommentsRequestFieldPath is the implementation for the field path of ListMemoCommentsRequest
type listMemoCommentsRequestFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewListMemoCommentsRequestFieldPath creates a new listMemoCommentsRequestFieldPath
func NewListMemoCommentsRequestFieldPath(fieldPath string) IListMemoCommentsRequestFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return listMemoCommentsRequestFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x listMemoCommentsRequestFieldPath) String() string { return x.fieldPath }

func (x listMemoCommentsRequestFieldPath) Name() string { return x.prefix + "name" }

// FieldPath returns the field path for ListMemoCommentsRequest
func (x *ListMemoCommentsRequest) FieldPath() IListMemoCommentsRequestFieldPath {
	return NewListMemoCommentsRequestFieldPath("")
}

// IListMemoCommentsResponseFieldPath is the interface for the field path of ListMemoCommentsResponse
type IListMemoCommentsResponseFieldPath interface {
	String() string
	Memos() string
}

// listMemoCommentsResponseFieldPath is the implementation for the field path of ListMemoCommentsResponse
type listMemoCommentsResponseFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewListMemoCommentsResponseFieldPath creates a new listMemoCommentsResponseFieldPath
func NewListMemoCommentsResponseFieldPath(fieldPath string) IListMemoCommentsResponseFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return listMemoCommentsResponseFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x listMemoCommentsResponseFieldPath) String() string { return x.fieldPath }

func (x listMemoCommentsResponseFieldPath) Memos() string { return x.prefix + "memos" }

// FieldPath returns the field path for ListMemoCommentsResponse
func (x *ListMemoCommentsResponse) FieldPath() IListMemoCommentsResponseFieldPath {
	return NewListMemoCommentsResponseFieldPath("")
}

// IListMemoReactionsRequestFieldPath is the interface for the field path of ListMemoReactionsRequest
type IListMemoReactionsRequestFieldPath interface {
	String() string
	Name() string
}

// listMemoReactionsRequestFieldPath is the implementation for the field path of ListMemoReactionsRequest
type listMemoReactionsRequestFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewListMemoReactionsRequestFieldPath creates a new listMemoReactionsRequestFieldPath
func NewListMemoReactionsRequestFieldPath(fieldPath string) IListMemoReactionsRequestFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return listMemoReactionsRequestFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x listMemoReactionsRequestFieldPath) String() string { return x.fieldPath }

func (x listMemoReactionsRequestFieldPath) Name() string { return x.prefix + "name" }

// FieldPath returns the field path for ListMemoReactionsRequest
func (x *ListMemoReactionsRequest) FieldPath() IListMemoReactionsRequestFieldPath {
	return NewListMemoReactionsRequestFieldPath("")
}

// IListMemoReactionsResponseFieldPath is the interface for the field path of ListMemoReactionsResponse
type IListMemoReactionsResponseFieldPath interface {
	String() string
	Reactions() string
}

// listMemoReactionsResponseFieldPath is the implementation for the field path of ListMemoReactionsResponse
type listMemoReactionsResponseFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewListMemoReactionsResponseFieldPath creates a new listMemoReactionsResponseFieldPath
func NewListMemoReactionsResponseFieldPath(fieldPath string) IListMemoReactionsResponseFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return listMemoReactionsResponseFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x listMemoReactionsResponseFieldPath) String() string { return x.fieldPath }

func (x listMemoReactionsResponseFieldPath) Reactions() string { return x.prefix + "reactions" }

// FieldPath returns the field path for ListMemoReactionsResponse
func (x *ListMemoReactionsResponse) FieldPath() IListMemoReactionsResponseFieldPath {
	return NewListMemoReactionsResponseFieldPath("")
}

// IUpsertMemoReactionRequestFieldPath is the interface for the field path of UpsertMemoReactionRequest
type IUpsertMemoReactionRequestFieldPath interface {
	String() string
	Name() string
	Reaction() IReactionFieldPath
}

// upsertMemoReactionRequestFieldPath is the implementation for the field path of UpsertMemoReactionRequest
type upsertMemoReactionRequestFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewUpsertMemoReactionRequestFieldPath creates a new upsertMemoReactionRequestFieldPath
func NewUpsertMemoReactionRequestFieldPath(fieldPath string) IUpsertMemoReactionRequestFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return upsertMemoReactionRequestFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x upsertMemoReactionRequestFieldPath) String() string { return x.fieldPath }

func (x upsertMemoReactionRequestFieldPath) Name() string { return x.prefix + "name" }
func (x upsertMemoReactionRequestFieldPath) Reaction() IReactionFieldPath {
	return NewReactionFieldPath(x.prefix + "reaction")
}

// FieldPath returns the field path for UpsertMemoReactionRequest
func (x *UpsertMemoReactionRequest) FieldPath() IUpsertMemoReactionRequestFieldPath {
	return NewUpsertMemoReactionRequestFieldPath("")
}

// IDeleteMemoReactionRequestFieldPath is the interface for the field path of DeleteMemoReactionRequest
type IDeleteMemoReactionRequestFieldPath interface {
	String() string
	ReactionId() string
}

// deleteMemoReactionRequestFieldPath is the implementation for the field path of DeleteMemoReactionRequest
type deleteMemoReactionRequestFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewDeleteMemoReactionRequestFieldPath creates a new deleteMemoReactionRequestFieldPath
func NewDeleteMemoReactionRequestFieldPath(fieldPath string) IDeleteMemoReactionRequestFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return deleteMemoReactionRequestFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x deleteMemoReactionRequestFieldPath) String() string { return x.fieldPath }

func (x deleteMemoReactionRequestFieldPath) ReactionId() string { return x.prefix + "reaction_id" }

// FieldPath returns the field path for DeleteMemoReactionRequest
func (x *DeleteMemoReactionRequest) FieldPath() IDeleteMemoReactionRequestFieldPath {
	return NewDeleteMemoReactionRequestFieldPath("")
}
