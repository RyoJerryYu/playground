//Code generated by protoc-gen-go-fieldmask. DO NOT EDIT.
//versions:
//- protoc-gen-go-fieldmask v1.0.9
//- protoc (unknown)
//source: api/v1/auth/auth_service.proto

package auth

import (
	users "github.com/RyoJerryYu/playground/proto/gengo/api/v1/users"
)

// IGetAuthStatusRequestFieldPath is the interface for the field path of GetAuthStatusRequest
type IGetAuthStatusRequestFieldPath interface {
	String() string
}

// getAuthStatusRequestFieldPath is the implementation for the field path of GetAuthStatusRequest
type getAuthStatusRequestFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewGetAuthStatusRequestFieldPath creates a new getAuthStatusRequestFieldPath
func NewGetAuthStatusRequestFieldPath(fieldPath string) IGetAuthStatusRequestFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return getAuthStatusRequestFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x getAuthStatusRequestFieldPath) String() string { return x.fieldPath }

// FieldPath returns the field path for GetAuthStatusRequest
func (x *GetAuthStatusRequest) FieldPath() IGetAuthStatusRequestFieldPath {
	return NewGetAuthStatusRequestFieldPath("")
}

// IGetAuthStatusResponseFieldPath is the interface for the field path of GetAuthStatusResponse
type IGetAuthStatusResponseFieldPath interface {
	String() string
	User() users.IUserFieldPath
}

// getAuthStatusResponseFieldPath is the implementation for the field path of GetAuthStatusResponse
type getAuthStatusResponseFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewGetAuthStatusResponseFieldPath creates a new getAuthStatusResponseFieldPath
func NewGetAuthStatusResponseFieldPath(fieldPath string) IGetAuthStatusResponseFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return getAuthStatusResponseFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x getAuthStatusResponseFieldPath) String() string { return x.fieldPath }

func (x getAuthStatusResponseFieldPath) User() users.IUserFieldPath {
	return users.NewUserFieldPath(x.prefix + "user")
}

// FieldPath returns the field path for GetAuthStatusResponse
func (x *GetAuthStatusResponse) FieldPath() IGetAuthStatusResponseFieldPath {
	return NewGetAuthStatusResponseFieldPath("")
}

// ISignInRequestFieldPath is the interface for the field path of SignInRequest
type ISignInRequestFieldPath interface {
	String() string
	Username() string
	Password() string
	NeverExpire() string
}

// signInRequestFieldPath is the implementation for the field path of SignInRequest
type signInRequestFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewSignInRequestFieldPath creates a new signInRequestFieldPath
func NewSignInRequestFieldPath(fieldPath string) ISignInRequestFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return signInRequestFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x signInRequestFieldPath) String() string { return x.fieldPath }

func (x signInRequestFieldPath) Username() string    { return x.prefix + "username" }
func (x signInRequestFieldPath) Password() string    { return x.prefix + "password" }
func (x signInRequestFieldPath) NeverExpire() string { return x.prefix + "never_expire" }

// FieldPath returns the field path for SignInRequest
func (x *SignInRequest) FieldPath() ISignInRequestFieldPath {
	return NewSignInRequestFieldPath("")
}

// ISignInWithSSORequestFieldPath is the interface for the field path of SignInWithSSORequest
type ISignInWithSSORequestFieldPath interface {
	String() string
	IdpId() string
	Code() string
	RedirectUri() string
	Nested() ISignInWithSSORequest_NestedFieldPath
}

// signInWithSSORequestFieldPath is the implementation for the field path of SignInWithSSORequest
type signInWithSSORequestFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewSignInWithSSORequestFieldPath creates a new signInWithSSORequestFieldPath
func NewSignInWithSSORequestFieldPath(fieldPath string) ISignInWithSSORequestFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return signInWithSSORequestFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x signInWithSSORequestFieldPath) String() string { return x.fieldPath }

func (x signInWithSSORequestFieldPath) IdpId() string       { return x.prefix + "idp_id" }
func (x signInWithSSORequestFieldPath) Code() string        { return x.prefix + "code" }
func (x signInWithSSORequestFieldPath) RedirectUri() string { return x.prefix + "redirect_uri" }
func (x signInWithSSORequestFieldPath) Nested() ISignInWithSSORequest_NestedFieldPath {
	return NewSignInWithSSORequest_NestedFieldPath(x.prefix + "nested")
}

// FieldPath returns the field path for SignInWithSSORequest
func (x *SignInWithSSORequest) FieldPath() ISignInWithSSORequestFieldPath {
	return NewSignInWithSSORequestFieldPath("")
}

// ISignInWithSSORequest_NestedFieldPath is the interface for the field path of SignInWithSSORequest_Nested
type ISignInWithSSORequest_NestedFieldPath interface {
	String() string
	IdpId() string
}

// signInWithSSORequest_NestedFieldPath is the implementation for the field path of SignInWithSSORequest_Nested
type signInWithSSORequest_NestedFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewSignInWithSSORequest_NestedFieldPath creates a new signInWithSSORequest_NestedFieldPath
func NewSignInWithSSORequest_NestedFieldPath(fieldPath string) ISignInWithSSORequest_NestedFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return signInWithSSORequest_NestedFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x signInWithSSORequest_NestedFieldPath) String() string { return x.fieldPath }

func (x signInWithSSORequest_NestedFieldPath) IdpId() string { return x.prefix + "idp_id" }

// FieldPath returns the field path for SignInWithSSORequest_Nested
func (x *SignInWithSSORequest_Nested) FieldPath() ISignInWithSSORequest_NestedFieldPath {
	return NewSignInWithSSORequest_NestedFieldPath("")
}

// ISignUpRequestFieldPath is the interface for the field path of SignUpRequest
type ISignUpRequestFieldPath interface {
	String() string
	Username() string
	Password() string
}

// signUpRequestFieldPath is the implementation for the field path of SignUpRequest
type signUpRequestFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewSignUpRequestFieldPath creates a new signUpRequestFieldPath
func NewSignUpRequestFieldPath(fieldPath string) ISignUpRequestFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return signUpRequestFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x signUpRequestFieldPath) String() string { return x.fieldPath }

func (x signUpRequestFieldPath) Username() string { return x.prefix + "username" }
func (x signUpRequestFieldPath) Password() string { return x.prefix + "password" }

// FieldPath returns the field path for SignUpRequest
func (x *SignUpRequest) FieldPath() ISignUpRequestFieldPath {
	return NewSignUpRequestFieldPath("")
}

// ISignOutRequestFieldPath is the interface for the field path of SignOutRequest
type ISignOutRequestFieldPath interface {
	String() string
}

// signOutRequestFieldPath is the implementation for the field path of SignOutRequest
type signOutRequestFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewSignOutRequestFieldPath creates a new signOutRequestFieldPath
func NewSignOutRequestFieldPath(fieldPath string) ISignOutRequestFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return signOutRequestFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x signOutRequestFieldPath) String() string { return x.fieldPath }

// FieldPath returns the field path for SignOutRequest
func (x *SignOutRequest) FieldPath() ISignOutRequestFieldPath {
	return NewSignOutRequestFieldPath("")
}
