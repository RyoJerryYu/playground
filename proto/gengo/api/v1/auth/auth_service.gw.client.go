// Code generated by protoc-gen-grpc-gateway-client. DO NOT EDIT.
// source: api/v1/auth/auth_service.proto

package apiv1

import (
	context "context"
	users "github.com/RyoJerryYu/playground/proto/gengo/api/v1/users"
	gateway "github.com/akuity/grpc-gateway-client/pkg/grpc/gateway"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// AuthServiceGatewayClient is the interface for AuthService service client.
type AuthServiceGatewayClient interface {
	// GetAuthStatus returns the current auth status of the user.
	GetAuthStatus(context.Context, *GetAuthStatusRequest) (*users.User, error)
	// SignIn signs in the user with the given username and password.
	SignIn(context.Context, *SignInRequest) (*users.User, error)
	// SignInWithSSO signs in the user with the given SSO code.
	SignInWithSSO(context.Context, *SignInWithSSORequest) (*users.User, error)
	// SignUp signs up the user with the given username and password.
	SignUp(context.Context, *SignUpRequest) (*users.User, error)
	// SignOut signs out the user.
	SignOut(context.Context, *SignOutRequest) (*emptypb.Empty, error)
}

func NewAuthServiceGatewayClient(c gateway.Client) AuthServiceGatewayClient {
	return &authServiceGatewayClient{
		gwc: c,
	}
}

type authServiceGatewayClient struct {
	gwc gateway.Client
}

func (c *authServiceGatewayClient) GetAuthStatus(ctx context.Context, req *GetAuthStatusRequest) (*users.User, error) {
	gwReq := c.gwc.NewRequest("POST", "/api/v1/auth/status")
	gwReq.SetBody(req)
	return gateway.DoRequest[users.User](ctx, gwReq)
}

func (c *authServiceGatewayClient) SignIn(ctx context.Context, req *SignInRequest) (*users.User, error) {
	gwReq := c.gwc.NewRequest("POST", "/api/v1/auth/signin")
	gwReq.SetBody(req)
	return gateway.DoRequest[users.User](ctx, gwReq)
}

func (c *authServiceGatewayClient) SignInWithSSO(ctx context.Context, req *SignInWithSSORequest) (*users.User, error) {
	gwReq := c.gwc.NewRequest("POST", "/api/v1/auth/signin/sso")
	gwReq.SetBody(req)
	return gateway.DoRequest[users.User](ctx, gwReq)
}

func (c *authServiceGatewayClient) SignUp(ctx context.Context, req *SignUpRequest) (*users.User, error) {
	gwReq := c.gwc.NewRequest("POST", "/api/v1/auth/signup")
	gwReq.SetBody(req)
	return gateway.DoRequest[users.User](ctx, gwReq)
}

func (c *authServiceGatewayClient) SignOut(ctx context.Context, req *SignOutRequest) (*emptypb.Empty, error) {
	gwReq := c.gwc.NewRequest("POST", "/api/v1/auth/signout")
	gwReq.SetBody(req)
	return gateway.DoRequest[emptypb.Empty](ctx, gwReq)
}
