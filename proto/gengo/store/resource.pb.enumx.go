//Code generated by protoc-gen-enumx. DO NOT EDIT.
//versions:
//- protoc-gen-enumx v1.0.9
//- protoc (unknown)
//source: store/resource.proto

package store

import (
	constraints "golang.org/x/exp/constraints"
)

func (x ResourceStorageType) Int() int       { return int(x) }
func (x ResourceStorageType) Int64() int64   { return int64(x) }
func (x ResourceStorageType) Int32() int32   { return int32(x) }
func (x ResourceStorageType) UInt() uint     { return uint(x) }
func (x ResourceStorageType) UInt64() uint64 { return uint64(x) }
func (x ResourceStorageType) UInt32() uint32 { return uint32(x) }

// ResourceStorageTypeFrom returns the ResourceStorageType for the given integers, or the zero value if not found.
func ResourceStorageTypeFrom[T constraints.Integer | constraints.Float](s T) ResourceStorageType {
	return ResourceStorageType(s)
}

// ResourceStorageTypeFromValid is like ResourceStorageTypeFrom, but returns an extra boolean value to check if the conversion is valid.
func ResourceStorageTypeFromValid[T constraints.Integer | constraints.Float](s T) (ResourceStorageType, bool) {
	_, valid := ResourceStorageType_name[int32(s)]
	return ResourceStorageType(s), valid
}

// ResourceStorageTypeFromStr returns the ResourceStorageType for the given string, or the zero value if not found.
func ResourceStorageTypeFromStr(s string) ResourceStorageType {
	return ResourceStorageType(ResourceStorageType_value[s])
}

// ResourceStorageTypeFromValidStr is like ResourceStorageTypeFromStr, but returns an extra boolean value to check if the conversion is valid.
func ResourceStorageTypeFromValidStr(s string) (ResourceStorageType, bool) {
	v, valid := ResourceStorageType_value[s]
	return ResourceStorageType(v), valid
}

var _ResourceStorageType_all = []ResourceStorageType{
	ResourceStorageType_RESOURCE_STORAGE_TYPE_UNSPECIFIED,
	ResourceStorageType_LOCAL,
	ResourceStorageType_S3,
	ResourceStorageType_EXTERNAL,
}
var _ResourceStorageType_allName = []string{
	"ResourceStorageType_RESOURCE_STORAGE_TYPE_UNSPECIFIED",
	"ResourceStorageType_LOCAL",
	"ResourceStorageType_S3",
	"ResourceStorageType_EXTERNAL",
}
var _ResourceStorageType_allValue = []int32{
	0,
	1,
	2,
	3,
}

// ResourceStorageTypeAll returns all the values of the ResourceStorageType enum.
func ResourceStorageTypeAll() []ResourceStorageType {
	return _ResourceStorageType_all[:]
}

// ResourceStorageTypeAllName returns all the names of the ResourceStorageType enum.
func ResourceStorageTypeAllName() []string {
	return _ResourceStorageType_allName[:]
}

// ResourceStorageTypeAllValue returns all the values of the ResourceStorageType enum.
func ResourceStorageTypeAllValue() []int32 {
	return _ResourceStorageType_allValue[:]
}
