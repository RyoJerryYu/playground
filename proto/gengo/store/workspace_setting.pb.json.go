//Code generated by protoc-gen-go-json. DO NOT EDIT.
//versions:
//- protoc-gen-go-json v1.0.9
//- protoc (unknown)
//source: store/workspace_setting.proto

package store

import (
	bytes "bytes"
	json "encoding/json"
	fmt "fmt"
	protojson "google.golang.org/protobuf/encoding/protojson"
)

// MarshalJSON implements json.Marshaler
func (enum WorkspaceSettingKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(enum.String())
}

// UnmarshalJSON implements json.Unmarshaler
func (enum *WorkspaceSettingKey) UnmarshalJSON(b []byte) error {
	dec := json.NewDecoder(bytes.NewReader(b))
	v, err := dec.Token()
	if err != nil {
		return err
	}
	switch v := v.(type) {
	case json.Number:
		n, err := v.Int64()
		if err != nil {
			return err
		}
		*enum = WorkspaceSettingKey(n)
	case float64:
		*enum = WorkspaceSettingKey(v)
	case string:
		*enum = WorkspaceSettingKey(WorkspaceSettingKey_value[v])
	default:
		return fmt.Errorf("invalid enum value %v", v)
	}
	return nil
}

// MarshalJSON implements json.Marshaler
func (msg *WorkspaceSetting) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{
		EmitUnpopulated: true,
	}.Marshal(msg)
}

// UnmarshalJSON implements json.Unmarshaler
func (msg *WorkspaceSetting) UnmarshalJSON(b []byte) error {
	return protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}.Unmarshal(b, msg)
}

// MarshalJSON implements json.Marshaler
func (msg *WorkspaceBasicSetting) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{
		EmitUnpopulated: true,
	}.Marshal(msg)
}

// UnmarshalJSON implements json.Unmarshaler
func (msg *WorkspaceBasicSetting) UnmarshalJSON(b []byte) error {
	return protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}.Unmarshal(b, msg)
}

// MarshalJSON implements json.Marshaler
func (msg *WorkspaceGeneralSetting) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{
		EmitUnpopulated: true,
	}.Marshal(msg)
}

// UnmarshalJSON implements json.Unmarshaler
func (msg *WorkspaceGeneralSetting) UnmarshalJSON(b []byte) error {
	return protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}.Unmarshal(b, msg)
}

// MarshalJSON implements json.Marshaler
func (msg *WorkspaceCustomProfile) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{
		EmitUnpopulated: true,
	}.Marshal(msg)
}

// UnmarshalJSON implements json.Unmarshaler
func (msg *WorkspaceCustomProfile) UnmarshalJSON(b []byte) error {
	return protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}.Unmarshal(b, msg)
}

// MarshalJSON implements json.Marshaler
func (msg *WorkspaceStorageSetting) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{
		EmitUnpopulated: true,
	}.Marshal(msg)
}

// UnmarshalJSON implements json.Unmarshaler
func (msg *WorkspaceStorageSetting) UnmarshalJSON(b []byte) error {
	return protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}.Unmarshal(b, msg)
}

// MarshalJSON implements json.Marshaler
func (enum WorkspaceStorageSetting_StorageType) MarshalJSON() ([]byte, error) {
	return json.Marshal(enum.String())
}

// UnmarshalJSON implements json.Unmarshaler
func (enum *WorkspaceStorageSetting_StorageType) UnmarshalJSON(b []byte) error {
	dec := json.NewDecoder(bytes.NewReader(b))
	v, err := dec.Token()
	if err != nil {
		return err
	}
	switch v := v.(type) {
	case json.Number:
		n, err := v.Int64()
		if err != nil {
			return err
		}
		*enum = WorkspaceStorageSetting_StorageType(n)
	case float64:
		*enum = WorkspaceStorageSetting_StorageType(v)
	case string:
		*enum = WorkspaceStorageSetting_StorageType(WorkspaceStorageSetting_StorageType_value[v])
	default:
		return fmt.Errorf("invalid enum value %v", v)
	}
	return nil
}

// MarshalJSON implements json.Marshaler
func (msg *StorageS3Config) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{
		EmitUnpopulated: true,
	}.Marshal(msg)
}

// UnmarshalJSON implements json.Unmarshaler
func (msg *StorageS3Config) UnmarshalJSON(b []byte) error {
	return protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}.Unmarshal(b, msg)
}

// MarshalJSON implements json.Marshaler
func (msg *WorkspaceMemoRelatedSetting) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{
		EmitUnpopulated: true,
	}.Marshal(msg)
}

// UnmarshalJSON implements json.Unmarshaler
func (msg *WorkspaceMemoRelatedSetting) UnmarshalJSON(b []byte) error {
	return protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}.Unmarshal(b, msg)
}
