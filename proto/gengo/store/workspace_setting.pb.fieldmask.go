//Code generated by protoc-gen-go-fieldmask. DO NOT EDIT.
//versions:
//- protoc-gen-go-fieldmask v1.0.9
//- protoc (unknown)
//source: store/workspace_setting.proto

package store

// IWorkspaceSettingFieldPath is the interface for the field path of WorkspaceSetting
type IWorkspaceSettingFieldPath interface {
	String() string
	Key() string
	BasicSetting() IWorkspaceBasicSettingFieldPath
	GeneralSetting() IWorkspaceGeneralSettingFieldPath
	StorageSetting() IWorkspaceStorageSettingFieldPath
	MemoRelatedSetting() IWorkspaceMemoRelatedSettingFieldPath
}

// workspaceSettingFieldPath is the implementation for the field path of WorkspaceSetting
type workspaceSettingFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewWorkspaceSettingFieldPath creates a new workspaceSettingFieldPath
func NewWorkspaceSettingFieldPath(fieldPath string) IWorkspaceSettingFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return workspaceSettingFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x workspaceSettingFieldPath) String() string { return x.fieldPath }

func (x workspaceSettingFieldPath) Key() string { return x.prefix + "key" }
func (x workspaceSettingFieldPath) BasicSetting() IWorkspaceBasicSettingFieldPath {
	return NewWorkspaceBasicSettingFieldPath(x.prefix + "basic_setting")
}
func (x workspaceSettingFieldPath) GeneralSetting() IWorkspaceGeneralSettingFieldPath {
	return NewWorkspaceGeneralSettingFieldPath(x.prefix + "general_setting")
}
func (x workspaceSettingFieldPath) StorageSetting() IWorkspaceStorageSettingFieldPath {
	return NewWorkspaceStorageSettingFieldPath(x.prefix + "storage_setting")
}
func (x workspaceSettingFieldPath) MemoRelatedSetting() IWorkspaceMemoRelatedSettingFieldPath {
	return NewWorkspaceMemoRelatedSettingFieldPath(x.prefix + "memo_related_setting")
}

// FieldPath returns the field path for WorkspaceSetting
func (x *WorkspaceSetting) FieldPath() IWorkspaceSettingFieldPath {
	return NewWorkspaceSettingFieldPath("")
}

// IWorkspaceBasicSettingFieldPath is the interface for the field path of WorkspaceBasicSetting
type IWorkspaceBasicSettingFieldPath interface {
	String() string
	SecretKey() string
	SchemaVersion() string
}

// workspaceBasicSettingFieldPath is the implementation for the field path of WorkspaceBasicSetting
type workspaceBasicSettingFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewWorkspaceBasicSettingFieldPath creates a new workspaceBasicSettingFieldPath
func NewWorkspaceBasicSettingFieldPath(fieldPath string) IWorkspaceBasicSettingFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return workspaceBasicSettingFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x workspaceBasicSettingFieldPath) String() string { return x.fieldPath }

func (x workspaceBasicSettingFieldPath) SecretKey() string     { return x.prefix + "secret_key" }
func (x workspaceBasicSettingFieldPath) SchemaVersion() string { return x.prefix + "schema_version" }

// FieldPath returns the field path for WorkspaceBasicSetting
func (x *WorkspaceBasicSetting) FieldPath() IWorkspaceBasicSettingFieldPath {
	return NewWorkspaceBasicSettingFieldPath("")
}

// IWorkspaceGeneralSettingFieldPath is the interface for the field path of WorkspaceGeneralSetting
type IWorkspaceGeneralSettingFieldPath interface {
	String() string
	DisallowUserRegistration() string
	DisallowPasswordAuth() string
	AdditionalScript() string
	AdditionalStyle() string
	CustomProfile() IWorkspaceCustomProfileFieldPath
	WeekStartDayOffset() string
	DisallowChangeUsername() string
	DisallowChangeNickname() string
}

// workspaceGeneralSettingFieldPath is the implementation for the field path of WorkspaceGeneralSetting
type workspaceGeneralSettingFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewWorkspaceGeneralSettingFieldPath creates a new workspaceGeneralSettingFieldPath
func NewWorkspaceGeneralSettingFieldPath(fieldPath string) IWorkspaceGeneralSettingFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return workspaceGeneralSettingFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x workspaceGeneralSettingFieldPath) String() string { return x.fieldPath }

func (x workspaceGeneralSettingFieldPath) DisallowUserRegistration() string {
	return x.prefix + "disallow_user_registration"
}
func (x workspaceGeneralSettingFieldPath) DisallowPasswordAuth() string {
	return x.prefix + "disallow_password_auth"
}
func (x workspaceGeneralSettingFieldPath) AdditionalScript() string {
	return x.prefix + "additional_script"
}
func (x workspaceGeneralSettingFieldPath) AdditionalStyle() string {
	return x.prefix + "additional_style"
}
func (x workspaceGeneralSettingFieldPath) CustomProfile() IWorkspaceCustomProfileFieldPath {
	return NewWorkspaceCustomProfileFieldPath(x.prefix + "custom_profile")
}
func (x workspaceGeneralSettingFieldPath) WeekStartDayOffset() string {
	return x.prefix + "week_start_day_offset"
}
func (x workspaceGeneralSettingFieldPath) DisallowChangeUsername() string {
	return x.prefix + "disallow_change_username"
}
func (x workspaceGeneralSettingFieldPath) DisallowChangeNickname() string {
	return x.prefix + "disallow_change_nickname"
}

// FieldPath returns the field path for WorkspaceGeneralSetting
func (x *WorkspaceGeneralSetting) FieldPath() IWorkspaceGeneralSettingFieldPath {
	return NewWorkspaceGeneralSettingFieldPath("")
}

// IWorkspaceCustomProfileFieldPath is the interface for the field path of WorkspaceCustomProfile
type IWorkspaceCustomProfileFieldPath interface {
	String() string
	Title() string
	Description() string
	LogoUrl() string
	Locale() string
	Appearance() string
}

// workspaceCustomProfileFieldPath is the implementation for the field path of WorkspaceCustomProfile
type workspaceCustomProfileFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewWorkspaceCustomProfileFieldPath creates a new workspaceCustomProfileFieldPath
func NewWorkspaceCustomProfileFieldPath(fieldPath string) IWorkspaceCustomProfileFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return workspaceCustomProfileFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x workspaceCustomProfileFieldPath) String() string { return x.fieldPath }

func (x workspaceCustomProfileFieldPath) Title() string       { return x.prefix + "title" }
func (x workspaceCustomProfileFieldPath) Description() string { return x.prefix + "description" }
func (x workspaceCustomProfileFieldPath) LogoUrl() string     { return x.prefix + "logo_url" }
func (x workspaceCustomProfileFieldPath) Locale() string      { return x.prefix + "locale" }
func (x workspaceCustomProfileFieldPath) Appearance() string  { return x.prefix + "appearance" }

// FieldPath returns the field path for WorkspaceCustomProfile
func (x *WorkspaceCustomProfile) FieldPath() IWorkspaceCustomProfileFieldPath {
	return NewWorkspaceCustomProfileFieldPath("")
}

// IWorkspaceStorageSettingFieldPath is the interface for the field path of WorkspaceStorageSetting
type IWorkspaceStorageSettingFieldPath interface {
	String() string
	StorageType() string
	FilepathTemplate() string
	UploadSizeLimitMb() string
	S3Config() IStorageS3ConfigFieldPath
}

// workspaceStorageSettingFieldPath is the implementation for the field path of WorkspaceStorageSetting
type workspaceStorageSettingFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewWorkspaceStorageSettingFieldPath creates a new workspaceStorageSettingFieldPath
func NewWorkspaceStorageSettingFieldPath(fieldPath string) IWorkspaceStorageSettingFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return workspaceStorageSettingFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x workspaceStorageSettingFieldPath) String() string { return x.fieldPath }

func (x workspaceStorageSettingFieldPath) StorageType() string { return x.prefix + "storage_type" }
func (x workspaceStorageSettingFieldPath) FilepathTemplate() string {
	return x.prefix + "filepath_template"
}
func (x workspaceStorageSettingFieldPath) UploadSizeLimitMb() string {
	return x.prefix + "upload_size_limit_mb"
}
func (x workspaceStorageSettingFieldPath) S3Config() IStorageS3ConfigFieldPath {
	return NewStorageS3ConfigFieldPath(x.prefix + "s3_config")
}

// FieldPath returns the field path for WorkspaceStorageSetting
func (x *WorkspaceStorageSetting) FieldPath() IWorkspaceStorageSettingFieldPath {
	return NewWorkspaceStorageSettingFieldPath("")
}

// IStorageS3ConfigFieldPath is the interface for the field path of StorageS3Config
type IStorageS3ConfigFieldPath interface {
	String() string
	AccessKeyId() string
	AccessKeySecret() string
	Endpoint() string
	Region() string
	Bucket() string
}

// storageS3ConfigFieldPath is the implementation for the field path of StorageS3Config
type storageS3ConfigFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewStorageS3ConfigFieldPath creates a new storageS3ConfigFieldPath
func NewStorageS3ConfigFieldPath(fieldPath string) IStorageS3ConfigFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return storageS3ConfigFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x storageS3ConfigFieldPath) String() string { return x.fieldPath }

func (x storageS3ConfigFieldPath) AccessKeyId() string     { return x.prefix + "access_key_id" }
func (x storageS3ConfigFieldPath) AccessKeySecret() string { return x.prefix + "access_key_secret" }
func (x storageS3ConfigFieldPath) Endpoint() string        { return x.prefix + "endpoint" }
func (x storageS3ConfigFieldPath) Region() string          { return x.prefix + "region" }
func (x storageS3ConfigFieldPath) Bucket() string          { return x.prefix + "bucket" }

// FieldPath returns the field path for StorageS3Config
func (x *StorageS3Config) FieldPath() IStorageS3ConfigFieldPath {
	return NewStorageS3ConfigFieldPath("")
}

// IWorkspaceMemoRelatedSettingFieldPath is the interface for the field path of WorkspaceMemoRelatedSetting
type IWorkspaceMemoRelatedSettingFieldPath interface {
	String() string
	DisallowPublicVisibility() string
	DisplayWithUpdateTime() string
	ContentLengthLimit() string
	EnableAutoCompact() string
	EnableDoubleClickEdit() string
	EnableLinkPreview() string
	EnableComment() string
	EnableLocation() string
	DefaultVisibility() string
	Reactions() string
	DisableMarkdownShortcuts() string
}

// workspaceMemoRelatedSettingFieldPath is the implementation for the field path of WorkspaceMemoRelatedSetting
type workspaceMemoRelatedSettingFieldPath struct {
	fieldPath string // the field path to the current field, empty if it's root
	prefix    string // e.g. "fieldPath." or empty if it's root
}

// NewWorkspaceMemoRelatedSettingFieldPath creates a new workspaceMemoRelatedSettingFieldPath
func NewWorkspaceMemoRelatedSettingFieldPath(fieldPath string) IWorkspaceMemoRelatedSettingFieldPath {
	prefix := ""
	if fieldPath != "" {
		prefix = fieldPath + "."
	}
	return workspaceMemoRelatedSettingFieldPath{fieldPath: fieldPath, prefix: prefix}
}

// String returns the field path
func (x workspaceMemoRelatedSettingFieldPath) String() string { return x.fieldPath }

func (x workspaceMemoRelatedSettingFieldPath) DisallowPublicVisibility() string {
	return x.prefix + "disallow_public_visibility"
}
func (x workspaceMemoRelatedSettingFieldPath) DisplayWithUpdateTime() string {
	return x.prefix + "display_with_update_time"
}
func (x workspaceMemoRelatedSettingFieldPath) ContentLengthLimit() string {
	return x.prefix + "content_length_limit"
}
func (x workspaceMemoRelatedSettingFieldPath) EnableAutoCompact() string {
	return x.prefix + "enable_auto_compact"
}
func (x workspaceMemoRelatedSettingFieldPath) EnableDoubleClickEdit() string {
	return x.prefix + "enable_double_click_edit"
}
func (x workspaceMemoRelatedSettingFieldPath) EnableLinkPreview() string {
	return x.prefix + "enable_link_preview"
}
func (x workspaceMemoRelatedSettingFieldPath) EnableComment() string {
	return x.prefix + "enable_comment"
}
func (x workspaceMemoRelatedSettingFieldPath) EnableLocation() string {
	return x.prefix + "enable_location"
}
func (x workspaceMemoRelatedSettingFieldPath) DefaultVisibility() string {
	return x.prefix + "default_visibility"
}
func (x workspaceMemoRelatedSettingFieldPath) Reactions() string { return x.prefix + "reactions" }
func (x workspaceMemoRelatedSettingFieldPath) DisableMarkdownShortcuts() string {
	return x.prefix + "disable_markdown_shortcuts"
}

// FieldPath returns the field path for WorkspaceMemoRelatedSetting
func (x *WorkspaceMemoRelatedSetting) FieldPath() IWorkspaceMemoRelatedSettingFieldPath {
	return NewWorkspaceMemoRelatedSettingFieldPath("")
}
