//Code generated by protoc-gen-enumx. DO NOT EDIT.
//versions:
//- protoc-gen-enumx v1.0.7
//- protoc (unknown)
//source: store/workspace_setting.proto

package store

import (
	constraints "golang.org/x/exp/constraints"
)

func (x WorkspaceSettingKey) Int() int       { return int(x) }
func (x WorkspaceSettingKey) Int64() int64   { return int64(x) }
func (x WorkspaceSettingKey) Int32() int32   { return int32(x) }
func (x WorkspaceSettingKey) UInt() uint     { return uint(x) }
func (x WorkspaceSettingKey) UInt64() uint64 { return uint64(x) }
func (x WorkspaceSettingKey) UInt32() uint32 { return uint32(x) }

// WorkspaceSettingKeyFrom returns the WorkspaceSettingKey for the given integers, or the zero value if not found.
func WorkspaceSettingKeyFrom[T constraints.Integer | constraints.Float](s T) WorkspaceSettingKey {
	return WorkspaceSettingKey(s)
}

// WorkspaceSettingKeyFromValid is like WorkspaceSettingKeyFrom, but returns an extra boolean value to check if the conversion is valid.
func WorkspaceSettingKeyFromValid[T constraints.Integer | constraints.Float](s T) (WorkspaceSettingKey, bool) {
	_, valid := WorkspaceSettingKey_name[int32(s)]
	return WorkspaceSettingKey(s), valid
}

// WorkspaceSettingKeyFromStr returns the WorkspaceSettingKey for the given string, or the zero value if not found.
func WorkspaceSettingKeyFromStr(s string) WorkspaceSettingKey {
	return WorkspaceSettingKey(WorkspaceSettingKey_value[s])
}

// WorkspaceSettingKeyFromValidStr is like WorkspaceSettingKeyFromStr, but returns an extra boolean value to check if the conversion is valid.
func WorkspaceSettingKeyFromValidStr(s string) (WorkspaceSettingKey, bool) {
	v, valid := WorkspaceSettingKey_value[s]
	return WorkspaceSettingKey(v), valid
}

var _WorkspaceSettingKey_all = []WorkspaceSettingKey{
	WorkspaceSettingKey_WORKSPACE_SETTING_KEY_UNSPECIFIED,
	WorkspaceSettingKey_BASIC,
	WorkspaceSettingKey_GENERAL,
	WorkspaceSettingKey_STORAGE,
	WorkspaceSettingKey_MEMO_RELATED,
}
var _WorkspaceSettingKey_allName = []string{
	"WorkspaceSettingKey_WORKSPACE_SETTING_KEY_UNSPECIFIED",
	"WorkspaceSettingKey_BASIC",
	"WorkspaceSettingKey_GENERAL",
	"WorkspaceSettingKey_STORAGE",
	"WorkspaceSettingKey_MEMO_RELATED",
}
var _WorkspaceSettingKey_allValue = []int32{
	0,
	1,
	2,
	3,
	4,
}

// WorkspaceSettingKeyAll returns all the values of the WorkspaceSettingKey enum.
func WorkspaceSettingKeyAll() []WorkspaceSettingKey {
	return _WorkspaceSettingKey_all[:]
}

// WorkspaceSettingKeyAllName returns all the names of the WorkspaceSettingKey enum.
func WorkspaceSettingKeyAllName() []string {
	return _WorkspaceSettingKey_allName[:]
}

// WorkspaceSettingKeyAllValue returns all the values of the WorkspaceSettingKey enum.
func WorkspaceSettingKeyAllValue() []int32 {
	return _WorkspaceSettingKey_allValue[:]
}

func (x WorkspaceStorageSetting_StorageType) Int() int       { return int(x) }
func (x WorkspaceStorageSetting_StorageType) Int64() int64   { return int64(x) }
func (x WorkspaceStorageSetting_StorageType) Int32() int32   { return int32(x) }
func (x WorkspaceStorageSetting_StorageType) UInt() uint     { return uint(x) }
func (x WorkspaceStorageSetting_StorageType) UInt64() uint64 { return uint64(x) }
func (x WorkspaceStorageSetting_StorageType) UInt32() uint32 { return uint32(x) }

// WorkspaceStorageSetting_StorageTypeFrom returns the WorkspaceStorageSetting_StorageType for the given integers, or the zero value if not found.
func WorkspaceStorageSetting_StorageTypeFrom[T constraints.Integer | constraints.Float](s T) WorkspaceStorageSetting_StorageType {
	return WorkspaceStorageSetting_StorageType(s)
}

// WorkspaceStorageSetting_StorageTypeFromValid is like WorkspaceStorageSetting_StorageTypeFrom, but returns an extra boolean value to check if the conversion is valid.
func WorkspaceStorageSetting_StorageTypeFromValid[T constraints.Integer | constraints.Float](s T) (WorkspaceStorageSetting_StorageType, bool) {
	_, valid := WorkspaceStorageSetting_StorageType_name[int32(s)]
	return WorkspaceStorageSetting_StorageType(s), valid
}

// WorkspaceStorageSetting_StorageTypeFromStr returns the WorkspaceStorageSetting_StorageType for the given string, or the zero value if not found.
func WorkspaceStorageSetting_StorageTypeFromStr(s string) WorkspaceStorageSetting_StorageType {
	return WorkspaceStorageSetting_StorageType(WorkspaceStorageSetting_StorageType_value[s])
}

// WorkspaceStorageSetting_StorageTypeFromValidStr is like WorkspaceStorageSetting_StorageTypeFromStr, but returns an extra boolean value to check if the conversion is valid.
func WorkspaceStorageSetting_StorageTypeFromValidStr(s string) (WorkspaceStorageSetting_StorageType, bool) {
	v, valid := WorkspaceStorageSetting_StorageType_value[s]
	return WorkspaceStorageSetting_StorageType(v), valid
}

var _WorkspaceStorageSetting_StorageType_all = []WorkspaceStorageSetting_StorageType{
	WorkspaceStorageSetting_STORAGE_TYPE_UNSPECIFIED,
	WorkspaceStorageSetting_DATABASE,
	WorkspaceStorageSetting_LOCAL,
	WorkspaceStorageSetting_S3,
}
var _WorkspaceStorageSetting_StorageType_allName = []string{
	"WorkspaceStorageSetting_STORAGE_TYPE_UNSPECIFIED",
	"WorkspaceStorageSetting_DATABASE",
	"WorkspaceStorageSetting_LOCAL",
	"WorkspaceStorageSetting_S3",
}
var _WorkspaceStorageSetting_StorageType_allValue = []int32{
	0,
	1,
	2,
	3,
}

// WorkspaceStorageSetting_StorageTypeAll returns all the values of the WorkspaceStorageSetting_StorageType enum.
func WorkspaceStorageSetting_StorageTypeAll() []WorkspaceStorageSetting_StorageType {
	return _WorkspaceStorageSetting_StorageType_all[:]
}

// WorkspaceStorageSetting_StorageTypeAllName returns all the names of the WorkspaceStorageSetting_StorageType enum.
func WorkspaceStorageSetting_StorageTypeAllName() []string {
	return _WorkspaceStorageSetting_StorageType_allName[:]
}

// WorkspaceStorageSetting_StorageTypeAllValue returns all the values of the WorkspaceStorageSetting_StorageType enum.
func WorkspaceStorageSetting_StorageTypeAllValue() []int32 {
	return _WorkspaceStorageSetting_StorageType_allValue[:]
}
